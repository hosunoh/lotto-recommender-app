총 두 가지 모델로 로또 번호 추천 기능을 제공

총 두 가지 모델로 로또 번호 추천 기능을 제공하는 방향으로 진행하겠습니다.

	1. 통계 기반 추천 (기존 모델 고도화): 현재 구현된 빈도와 간격 분석 외에, 더 다양한 통계적 패턴(연속 번호, 홀짝 비율, 번호의 총합 범위, 끝자리 수 등)을 분석하여 추천 로직을 개선합니다.
	2. K-means (새로운 모델 추가): 과거 당첨 번호 조합을 군집화하여 새로운 유형의 추천 방식을 제공합니다.

1. 통계 기반 추천 고도화 시작
	연속 번호 출현 (Consecutive Numbers): 과거에 연속된 번호(예: 1,2 또는 15,16,17)가 얼마나 자주 나왔는지 분석하여 추천에 반영.
	홀수/짝수 비율 (Odd/Even Ratio): 당첨 번호 중 홀수와 짝수의 비율이 특정 범위(예: 3홀 3짝, 4홀 2짝 등)에 들어가는지 분석.
	번호의 총합 범위 (Sum Range): 당첨 번호 6개의 합이 특정 범위(예: 100~150)에 얼마나 자주 들어오는지 분석.
	끝자리 수 패턴 (Ending Digit Pattern): 각 번호의 끝자리(예: 1, 11, 21, 31은 끝자리가 1)가 얼마나 균등하게 분포되는지 분석.

			새로운 통계 분석 함수 추가:

		analyze_consecutive_patterns(df_lotto_original): 연속 번호 패턴 (2개, 3개 이상)의 출현 빈도 분석
		analyze_odd_even_ratios(df_lotto_original): 홀수/짝수 비율 패턴의 출현 빈도 분석
		analyze_sum_ranges(df_lotto_original): 당첨 번호 총합 범위 패턴의 출현 빈도 분석
		analyze_ending_digit_patterns(df_lotto_original): 끝자리 수 패턴의 출현 빈도 분석 (현재는 사용하지 않지만 추가)
		get_lotto_numbers 함수 내에서 새로운 분석 함수 호출:

		main.py의 진입점 함수인 get_lotto_numbers에서 위의 새로운 분석 함수들을 호출하여 각 패턴에 대한 통계 데이터를 계산합니다.
		generate_numbers_stat 함수 수정:

		새롭게 계산된 통계 데이터를 인자로 받도록 변경되었습니다.
		number_scores 계산 시 freq와 gap 외에 이 새로운 패턴 데이터를 직접적으로 반영하는 로직은 아직 포함되지 않았습니다. 현재는 top_candidates를 선택하는 기준을 상위 20개로 늘렸고, 특정 패턴(홀짝 비율, 합계 범위, 연속 번호 개수)을 만족하는 조합을 만들도록 '시도'하는 주석을 추가했습니다.
		로직 개선 방향: 이 새로운 패턴 데이터를 바탕으로 number_scores를 조정하거나, generate_numbers_stat 함수 내부에서 번호를 선택한 후 조합의 '유효성'을 평가하여 다시 뽑는 방식으로 고도화할 수 있습니다. 현재 코드는 이 패턴을 '어떻게 반영할 것인가'에 대한 예시 설명을 포함하고 있습니다.
		현재 코드의 패턴 반영 방식: generate_numbers_stat 함수는 여전히 빈도와 간격 위주로 개별 번호의 점수를 매기고 상위 20개 후보군에서 번호를 뽑습니다. 그리고 최종 생성된 조합의 패턴 점수를 계산하는 부분(홀짝 비율 점수, 번호 합계 점수, 연속 번호 점수)을 추가했습니다. 이 점수들은 현재는 반환되지 않지만, 앞으로 이 조합이 얼마나 통계적 경향에 부합하는지 평가하는 기준으로 사용될 수 있습니다. (예: 점수가 낮은 조합은 다시 뽑도록 로직 추가 등)